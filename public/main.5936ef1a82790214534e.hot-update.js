/*! For license information please see main.5936ef1a82790214534e.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatep1("main",{"./app/components/Canvas/Collections/index.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>h});var i=s("./node_modules/gsap/index.js"),r=s("./node_modules/lodash/map.js"),l=s.n(r);Object(function(){var e=new Error("Cannot find module './Media'");throw e.code="MODULE_NOT_FOUND",e}());var o=s("./node_modules/ogl/src/core/Transform.js"),n=s("./node_modules/ogl/src/extras/Plane.js");const h=class{constructor({gl:e,scene:t,sizes:s}){this.gl=e,this.sizes=s,this.scene=t,this.group=new o.Transform,this.galleryElement=document.querySelector(".collections__gallery__wrapper"),this.mediasElement=document.querySelectorAll(".collections__gallery__media"),this.scroll={current:0,target:0,last:0,lerp:.1},this.createGeometry(),this.createGallery(),this.createMedias(),this.group.setParent(this.scene),this.show()}createMedias(){this.mediaz=l()(this.mediasElement,((e,t)=>new Object(function(){var e=new Error("Cannot find module './Media'");throw e.code="MODULE_NOT_FOUND",e}())({element:e,geometry:this.geometry,index:t,gl:this.gl,sizes:this.sizes})))}createGeometry(){this.geometry=new n.Plane(this.gl)}createGallery(){this.gallery=new o.Transform,this.galleriesElements=document.querySelector(".collections__gallery"),this.galleries=l()(this.galleriesElements,((e,t)=>new Gallery({element:e,geometry:this.geometry,index:t,gl:this.gl,sizes:this.sizes})))}show(){l()(this.medias,(e=>e.show()))}hide(){l()(this.medias,(e=>e.hide()))}onResize(e){this.Bounds=this.elementsWrapper.getBoundingClientRect(),this.Bounds=this.galleryElement.getBoundingClientRect(),this.sizes=e.sizes,this.width=this.Bounds.width/window.innerWidth*this.sizes.width,this.scroll.current=this.scroll.target=0,l()(this.mediaz,(t=>t.onResize(e,this.scroll.current)))}onTouchDown({x:e,y:t}){this.scroll.last=this.scroll.current}onTouchMove({x:e,y:t}){const s=e.last-e.end;this.scroll.target=this.scroll.last-s}onTouchUp({x:e,y:t}){}update(){this.Bounds&&(this.scroll.current=i.default.utils.interpolate(this.scroll.current,this.scroll.target,this.scroll.lerp),this.scroll.current<this.scroll.target?this.direction="right":this.scroll.current>this.scroll.target&&(this.direction="left"),l()(this.medias,((e,t)=>{e.update(this.scroll.current)})))}destroy(){this.scene.removeChild(this.group)}}}},(function(e){e.h=()=>"15a38fa4570e902975d0"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,