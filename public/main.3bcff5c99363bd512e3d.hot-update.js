/*! For license information please see main.3bcff5c99363bd512e3d.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatep1("main",{"./app/classes/Page.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>w});var i=s("./node_modules/gsap/index.js"),n=s("./node_modules/normalize-wheel/index.js"),a=s.n(n),l=s("./node_modules/prefix/index.js"),o=s.n(l),r=s("./node_modules/lodash/each.js"),h=s.n(r),m=s("./app/animations/Title.js"),d=s("./app/animations/Paragraph.js"),c=s("./app/animations/Highlight.js"),u=s("./app/animations/Label.js"),p=s("./app/classes/AsyncLoad.js"),g=s("./app/classes/Color.js");class w{constructor({element:e,elements:t,id:s}){this.selector=e,this.selectorChildren={...t,animationsHightlights:'[data-animation="highlight"]',animationsTitles:'[data-animation="title"]',animationsParagraphs:'[data-animation="paragraph"]',animationsLabels:'[data-animation="label"]',preloaders:"[data-src]"},this.id=s,this.transformPrefix=o()("transform"),this.onMouseWheelEvent=this.onMouseWheel.bind(this)}create(){this.element=document.querySelector(this.selector),this.elements={},this.scroll={current:0,target:0,last:0,limit:0},h()(this.selectorChildren,((e,t)=>{e instanceof window.HTMLElement||e instanceof window.NodeList||Array.isArray(e)?this.elements[t]=e:(this.elements[t]=document.querySelectorAll(e),0===this.elements[t].length?this.elements[t]=null:1===this.elements[t].length&&(this.elements[t]=document.querySelector(e)))})),this.createAnimations(),this.createPreloader()}createPreloader(){this.preloaders=h()(this.elements.preloaders,(e=>new p.default({element:e})))}createAnimations(){this.animations=[],this.animations.length=0,this.animationsTitles=h()(this.elements.animationsTitles,(e=>new m.default({element:e}))),this.animations.push(this.animationsTitles),this.animationsHightlights=h()(this.elements.animationsHightlights,(e=>new c.default({element:e}))),this.animations.push(this.animationsHightlights),this.animationsParagraphs=h()(this.elements.animationsParagraphs,(e=>new d.default({element:e}))),this.animations.push(this.animationsParagraphs),this.animationsLabels=h()(this.elements.animationsLabels,(e=>new u.default({element:e}))),this.animations.push(this.animationsLabels)}show(e){return new Promise((t=>{g.ColorsManager.change({backgroundColor:this.element.getAttribute("data-background"),color:this.element.getAttribute("data-color")}),e?this.animationIn=e:(this.animationIn=i.default.timeline(),this.animationIn.fromTo(this.element,{autoAlpha:0},{autoAlpha:1})),this.animationIn.call((e=>{this.addEventListeners(),t()}))}))}hide(){return new Promise((e=>{this.destroy(),this.animationIn=i.default.timeline(),this.animationIn.to(this.element,{autoAlpha:0,onComplete:e})}))}onMouseWheel(e){const{pixelY:t}=a()(e);this.scroll.target+=t}onResize(){this.elements.wrapper&&(this.scroll.limit=this.elements.wrapper.clientHeight-window.innerHeight)}update(){this.scroll.target=i.default.utils.clamp(0,this.scroll.limit,this.scroll.target),this.scroll.current=i.default.utils.interpolate(this.scroll.current,this.scroll.target,.1),this.scroll.current<.01&&(this.scroll.current=0),this.elements.wrapper&&(this.elements.wrapper.style[this.transformPrefix]=`translateY(-${this.scroll.current}px)`)}addEventListeners(){window.addEventListener("wheel",this.onMouseWheelEvent)}removeEventListeners(){window.removeEventListener("wheel",this.onMouseWheelEvent)}destroy(){this.removeEventListeners()}}}},(function(e){e.h=()=>"f188b2074259fc4188b5"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,